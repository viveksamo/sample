{
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "Local URL",
      "url": "http://192.169.0.178:50560/cgi-bin/WebObjects/UMServices.woa/aeg"
    },
    {
      "description": "UAT URL",
      "url": "https://rest-uat-att.evergent.com/dfwonz"
    }
  ],
  "info": {
    "description": "This is API Documentation for Evergent",
    "version": "1.0.0",
    "title": "Evergent API Inventory",
    "contact": {
      "email": "vivek.sadhineni@evergent.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "aeg",
      "description": "Secured Admin-only calls"
    }
  ],
  "paths": {
    "/getProducts": {
      "post": {
        "tags": [
          "aeg"
        ],
        "summary": "gets all Products in the system item",
        "operationId": "GetProductsRequestMessage",
        "description": "getProducts() REST API is used to return the list of all products that are available to the specific DMA.",
        "responses": {
          "111111111": {
            "description": "Authentication failed"
          },
          "eV1267": {
            "description": "DmaId is mandatory"
          },
          "eV1391": {
            "description": "Invalid pricing date"
          },
          "eV2086": {
            "description": "Invalid returnPromotions"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "GetProductsRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/GetProductsRequestMessage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createUser": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "createUsertRequestMessage",
        "description": "createUser() REST API is used to create an account in Evergent system.",
        "responses": {
          "111111111": {
            "description": "Authentication failed"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "createUserRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/createUser"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/verifyAccount": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "verifyAccountRequestMessage",
        "description": "verifyAccount() REST API is used to verify the account of the customer by passing the user token as parameter.",
        "responses": {
          "111111111": {
            "description": "Authentication failed"
          },
          "ev2307": {
            "description": "Invalid Email."
          },
          "eV1313": {
            "description": "Email Id can not be null"
          },
          "eV1058": {
            "description": "Please enter a valid email"
          },
          "eV1169": {
            "description": "Invalid Parameter(s)"
          },
          "eV2043": {
            "description": "Not a Valid token"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "verifyAccountRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/verifyAccount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/validateParentalControlPIN": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "validateParentalControlPINRequestMessage",
        "description": "validateParentalControlPIN() REST API is used to validate the parental control PIN of the Customer Account.",
        "responses": {
          "111111111": {
            "description": "Authentication failed"
          },
          "eV2469": {
            "description": "Invalid Parental Control PIN."
          },
          "eV2454": {
            "description": "Parental controls already inactive"
          },
          "eV1357": {
            "description": "Contact does not exist"
          },
          "eV2123": {
            "description": "Either SP Account ID or CP Customer ID or Session Token is required"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "validateParentalControlPINRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/validateParentalControlPIN"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/removeDevice": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "removeDeviceRequestMessage",
        "description": "removeDevice() REST API is used is used to remove the Device from the customer account.",
        "responses": {
          "111111111": {
            "description": "Authentication failed"
          },
          "eV2216": {
            "description": "Device removed from the account successfully"
          },
          "eV1733": {
            "description": "Device does not exist"
          },
          "eV2123": {
            "description": "Either SP Account ID or CP Customer ID or Session Token is required"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          },
          "eV1709": {
            "description": "Account is already Inactive. Device can't be added."
          },
          "eV1747": {
            "description": "Third party API call failed"
          },
          "eV2219": {
            "description": "Please enter either deviceId or serial number"
          },
          "eV2474": {
            "description": "Maximum device removal limit reached"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "removeDeviceRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/removeDevice"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getAccountDevices": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "getAccountDevicesRequestMessage",
        "description": "getAccountDevices() REST API is used to get the active devices registered to the particular account.",
        "responses": {
          "111111111": {
            "description": "Authentication failed"
          },
          "ev2307": {
            "description": "Invalid Email."
          },
          "eV2123": {
            "description": "Either SP Account ID or CP Customer ID or Session Token is required"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          },
          "eV2126": {
            "description": "No devices are registered to the account"
          },
          "eV2138": {
            "description": "Generic Failure"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "getAccountDevicesRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/getAccountDevices"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getPayments": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "getPaymentsRequestMessage",
        "description": "getPayments () REST API is used to get all the successful             payments of the account including next Billing amount.",
        "responses": {
          "111111111": {
            "description": "Authentication failed"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "getPaymentsRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/getPayments"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/removeSubsciption": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "removeSubsciptionRequestMessage",
        "description": "removeSubscription () REST API removes a subscription from            the customer Account.",
        "responses": {
          "111111111": {
            "description": "Authentication failed"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          },
          "eV1744": {
            "description": "Account does not exists with given details"
          },
          "eV1099": {
            "description": "System has technical issues."
          },
          "eV2123": {
            "description": "Either SP Account ID or CP Customer ID or Session                Token is required"
          },
          "eV1663": {
            "description": "Either ServiceId or ServiceName is required"
          },
          "eV1672": {
            "description": "Service Id"
          },
          "eV1671": {
            "description": "Service name"
          },
          "eV1673": {
            "description": "ServiceId/ServiceName"
          },
          "eV1689": {
            "description": "No active subscription product with this ServiceId               /ServiceName in this account."
          },
          "eV2158": {
            "description": "Service can't remove or invalid"
          },
          "eV1419": {
            "description": "end date should be greater than or equal to start                date"
          },
          "eV1440": {
            "description": "One time products cant remove"
          },
          "eV1747": {
            "description": "Third party API call failed"
          },
          "eV1026": {
            "description": "Invalid Reason Code"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "removeSubscriptionRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/removeSubscription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updatePaymentInfo": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "updatePaymentInfoRequestMessage",
        "description": "updatePaymentInfo () REST API is used to add/update/remove            the payment information for a customer Account.",
        "responses": {
          "111111111": {
            "description": "Authentication failed"
          },
          "eV1637": {
            "description": "Either SP Account ID or CP Customer ID is required"
          },
          "eV1003": {
            "description": "Invalid SP Account ID  “XXXX” for XXXX"
          },
          "eV1342": {
            "description": "Invalid customer ID “XXXX” for XXXX"
          },
          "eV1109": {
            "description": "“Label should be ACH or Card or PayPalAccount in                  Payment Method Info”"
          },
          "eV1584": {
            "description": "“Label cannot be empty”"
          },
          "eV1592": {
            "description": "“We can not select Auto Payment option while                      inactivating the Payment Method”."
          },
          "eV1588": {
            "description": "“Status must be either Active or InActive”"
          },
          "eV2124": {
            "description": "“Invalid Session Token”"
          },
          "eV2521": {
            "description": "Insufficient Address parameters"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updatePaymentInfoRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/updatePaymentInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forgotContactPassword": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "forgotContactPasswordRequestMessage",
        "description": "forgotContactPassword () REST API is used to reset the               contact password of the customer. If this api is executed            customer will be notified with a mail containing reset               password link.",
        "responses": {
          "111111111": {
            "description": "Authentication failed"
          },
          "eV2145": {
            "description": "Missing Parameter(s)"
          },
          "eV1744": {
            "description": "Account does not exists with given details"
          },
          "eV1452": {
            "description": "Mail sent successfully"
          },
          "eV2435": {
            "description": "Your account is associated with"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "forgotContactPasswordRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/forgotContactPassword"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateServiceEligibilityDetails": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "updateServiceEligibilityDetailsRequestMessage",
        "description": "updateServiceEligibilityDetails () REST API is used to               update the existing CTN (Cellular Telephone Number)                  eligibility details.",
        "responses": {
          "111111111": {
            "description": "Authentication failed"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updateServiceEligibilityDetailsRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/updateServiceEligibilityDetails"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateContact": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "updateContactRequestMessage",
        "description": "updateContact () REST API is used to update the contact of            an account in Evergent system.",
        "responses": {
          "111111111": {
            "description": "Authentication failed"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          },
          "eV2123": {
            "description": "Either SP Account ID or CP Customer ID or Session                  Token  is required"
          },
          "eV1047": {
            "description": "First Name should not exceed 100 characters"
          },
          "eV1048": {
            "description": "Last Name should not exceed 100 characters"
          },
          "eV1073": {
            "description": "length should be 10 digits"
          },
          "eV1057": {
            "description": "Email should not exceed 256 characters"
          },
          "eV1064": {
            "description": "User Name length should not exceed 256"
          },
          "eV1065": {
            "description": "User Name length should be minimum 4"
          },
          "eV1066": {
            "description": "User Name - Spaces are not allowed"
          },
          "eV1068": {
            "description": "Password length should not exceed 100"
          },
          "eV1070": {
            "description": "Password - Spaces are not allowed"
          },
          "eV2034": {
            "description": "UserName is mandatory"
          },
          "eV2473": {
            "description": "Parental Control PIN shouldn't exceeded 4 digits"
          },
          "eV2457": {
            "description": "New parental control pin should be numeric"
          },
          "eV1724": {
            "description": "Your Request has already been submitted"
          },
          "eV1023": {
            "description": "Error While Processing the request"
          },
          "eV2505": {
            "description": "Old password is required"
          },
          "eV2504": {
            "description": "Invalid old password"
          },
          "eV2515": {
            "description": "Your password is shorter than 8 characters"
          },
          "eV2516": {
            "description": "Your given password Shouldn't be \\\"Password\\"
          },
          "eV2517": {
            "description": "Password should contain alphabets along with Numerics             or special character @#$%^&+=!"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updateContactRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/updateContact"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/isCustomerEligibleForFreeTrial": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "isCustomerEligibleForFreeTrialRequestMessage",
        "description": "isCustomerEligibleForFreeTrial () REST API is verify                 whether the customer is eligible for free trial for the             account or not.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          },
          "eV2155": {
            "description": "No free trail Available"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isCustomerEligibleForFreeTrialRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/isCustomerEligible"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getPaymentMethods": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "getPaymentMethodsRequestMessage",
        "description": "getPaymentMethods() REST API is used to fetch all the                 existing payment methods of the customer Account.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "ev2307": {
            "description": "Invalid Email."
          },
          "eV2124": {
            "description": "Invalid Session Token"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "getPaymentMethodsRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/getPaymentMethods"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateParentalControlDetails": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "updateParentalControlDetailsRequestMessage",
        "description": "updateParentalControlDetails() REST API  is to update the parental control details.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV2123": {
            "description": "Either SP Account ID or CP Customer ID or Session Token is required"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          },
          "eV1058": {
            "description": "Invalid Email / Password"
          },
          "eV2456": {
            "description": "Old parental control pin is mandatory"
          },
          "eV2458": {
            "description": "Parental control level should be numeric"
          },
          "eV2457": {
            "description": "New parental control pin should be numeric"
          },
          "eV2449": {
            "description": "Invalid old parental control pin"
          },
          "eV2451": {
            "description": "New parental control pin is mandatory"
          },
          "eV2453": {
            "description": "Parental controls details required"
          },
          "eV1357": {
            "description": "Contact does not exist"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updateParentalControlDetailsRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/updateParentalControlDetails"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getActiveSubscriptions": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "getActiveSubscriptionsRequestMessage",
        "description": "getActiveSubscriptions() REST API is used to get the                 active subscriptions of an account in Evergent system.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV2138": {
            "description": "Generic Failure"
          },
          "eV2235": {
            "description": "Either SP Account ID or CP Customer ID or Contact ID             orSession Token is required"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "getActiveSubscriptionsRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/getActiveSubscriptions"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getContact": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "getContactRequestMessage",
        "description": "getContact () REST API is used to get the contact details            of a customer in Evergent system.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "ev2307": {
            "description": "Invalid Email."
          },
          "eV2123": {
            "description": "Either SP Account ID or CP Customer ID or Contact ID             or Session Token is required."
          },
          "eV2124": {
            "description": "Invalid Session Token"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "getContactRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/getContact"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resetPassword": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "resetPasswordRequestMessage",
        "description": "resetPassword () REST API is used to reset the password of            an account in Evergent system.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV1058": {
            "description": "Invalid Email / Password"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          },
          "eV2043": {
            "description": "Not a Valid token"
          },
          "eV2515": {
            "description": "Your password is shorter than 8 characters"
          },
          "eV2516": {
            "description": "Your given password Shouldn't be \\\"Password\\"
          },
          "eV2517": {
            "description": "Password should contain alphabets along with Numerics or special character @#$%^&+=!"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resetPasswordRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/resetPassword"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addTVODOrder": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "addTVODOrderRequestMessage",
        "description": "addTVODOrder () REST API places the TVOD order to the customer.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV2123": {
            "description": "Either SP Account ID or CP Customer ID or Session Token is required"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          },
          "eV1402": {
            "description": "Invalid transaction date"
          },
          "eV1404": {
            "description": "Invalid retail price for product"
          },
          "eV1405": {
            "description": "No VOD Item(s) found in the request with an OrderID"
          },
          "eV1513": {
            "description": "Invalid label"
          },
          "eV1684": {
            "description": "Payment method is mandatory"
          },
          "eV1108": {
            "description": "Label cannot be empty in Payment Method Info"
          },
          "eV1407": {
            "description": "Credit Card"
          },
          "eV1409": {
            "description": "Please update the CreditCard info before the purchase"
          },
          "eV1377": {
            "description": "Invalid amount"
          },
          "eV1413": {
            "description": "Total VODs purchase limit exceeded for AccountID"
          },
          "eV1122": {
            "description": "Insufficient  Parameter MethodType in CardInformation"
          },
          "eV1123": {
            "description": "Invalid  Parameter value for MethodType in CardInformation"
          },
          "eV1126": {
            "description": "Insufficient  Parameter CardName in CardInformation"
          },
          "eV1127": {
            "description": "Invalid  Parameter CardName in CardInformation. Length should not be greater than 100"
          },
          "eV1129": {
            "description": "Parameter Card Number is not valid in CardInformation"
          },
          "eV1125": {
            "description": "Invalid  Parameter CardType in CardInformation."
          },
          "eV1130": {
            "description": "Insufficient  Parameter Expiration Date in CardInformation"
          },
          "eV1131": {
            "description": "Invalid  Parameter expiry date in CardInformation. Enter in the format MM/YYYY"
          },
          "eV1132": {
            "description": "Invalid  Parameter expiry date in CardInformation. Enter current or later month"
          },
          "eV1133": {
            "description": "The Status of the given payment method is Inactive. Please activate it before using."
          },
          "eV1698": {
            "description": "Security code length should not exceed 4"
          },
          "eV16989": {
            "description": "Security code length should be greater than 2"
          },
          "eV1700": {
            "description": "NSecurity code be should be in digits"
          },
          "eV1680": {
            "description": "Invalid State in CardBilling"
          },
          "eV1681": {
            "description": "Invalid Country in CardBilling"
          },
          "eV1682": {
            "description": "Insufficient CardBilling Parameters"
          },
          "eV1246": {
            "description": "Invalid ZipCode"
          },
          "eV1155": {
            "description": "Fatal error occurred while processing the request"
          },
          "eV1385": {
            "description": "Payment Declined by Payment Gateway due to following reason"
          },
          "eV1156": {
            "description": "Gateway Response not found during the payment processing."
          },
          "eV1158": {
            "description": "Error While Processing Payment"
          },
          "eV1107": {
            "description": "Insufficient parameters. Please provide payment method Info"
          },
          "eV1739": {
            "description": "Email already exists"
          },
          "eV1854": {
            "description": "Exception occured while inserting payment method"
          },
          "eV1747": {
            "description": "Third party API call failed"
          },
          "eV2471": {
            "description": "No. of VODs Exceeded"
          },
          "eV2511": {
            "description": "Missing Required Parameter(s)"
          },
          "eV2512": {
            "description": "Invalid Request Parameter(s)"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addTVODOrderRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/addTVODOrder"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/changePassword": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "changePasswordRequestMessage",
        "description": "changePassword () REST API is used to change the password             of an account in Evergent system.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV2124": {
            "description": "Invalid session token"
          },
          "eV2380": {
            "description": "Invalid current password"
          },
          "eV1227": {
            "description": "New password and Confirm password should be same"
          },
          "eV1228": {
            "description": "Password must be at least 4 characters"
          },
          "eV2515": {
            "description": "Your password is shorter than 8 characters"
          },
          "eV2516": {
            "description": "Your given password Shouldn't be \\\"Password\\"
          },
          "eV2517": {
            "description": "Password should contain alphabets along with Numerics            or special character @#$%^&+=!"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "changePasswordRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/changePassword"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createParentalControlDetails": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "createParentalControlDetailsRequestMessage",
        "description": "createParentalControlDetails() REST API  is to create the parental control  details for a customer account.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV2124": {
            "description": "Invalid session token"
          },
          "eV2457": {
            "description": "New parental control pin should be numeric"
          },
          "eV2123": {
            "description": "Either SP Account ID or CP Customer ID or Session Token is required"
          },
          "eV1342": {
            "description": "Invalid customer ID XXXX for  ATT"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "createParentalControlDetailsRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/createParentalControlDetails"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logOutUser": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "logOutUserRequestMessage",
        "description": "logOutUser() REST API is used for account log out. The               input parameters provided, validate the details and logs             out the customer from his account.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV2139": {
            "description": "Missing Session Token"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          },
          "eV2231": {
            "description": "Log out successfully"
          },
          "eV2138": {
            "description": "Generic Failure"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "logOutUserRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/logOutUser"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authForSubPlayBack": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "authForSubPlayBackRequestMessage",
        "description": "authForSubPlayBack () REST API is used to verify whether a customer can avail the content/subscription.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "ev2308": {
            "description": "Email"
          },
          "eV2145": {
            "description": "Missing Parameter(s)"
          },
          "eV2138": {
            "description": "Generic Failure"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          },
          "eV2159": {
            "description": "Outside of registered country"
          },
          "eV2375": {
            "description": "Services not yet available."
          },
          "eV2236": {
            "description": "Your current subscription has expired."
          },
          "eV2144": {
            "description": "Payment was declined"
          },
          "eV2129": {
            "description": "Account not subscribed with product/package"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "authForSubPlayBackRequestMessage": {
                    "$ref": "#/components/schemas/authForSubPlayBack"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/registerDevice": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "registerDeviceRequestMessage",
        "description": "registerDevice() REST API  will associate the device to the account based on the activation code.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV1001": {
            "description": "User Authentication Failed for UserName \"XXXX\" with ChannelPartnerName"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          },
          "eV2399": {
            "description": "Device Limit reached"
          },
          "eV2400": {
            "description": "Device already activated"
          },
          "eV2401": {
            "description": "Invalid Activation Code"
          },
          "eV2123": {
            "description": "Either SP Account ID or CP Customer ID or Session Token is required."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "registerDeviceRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/registerDevice"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/applyCouponV2": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "applyCouponV2RequestMessage",
        "description": "applyCouponV2() REST API is to apply the coupon on the               desired products/packages.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "applyCouponV2RequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/applyCouponV2"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addSubscriptions": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "addSubscriptionsRequestMessage",
        "description": "addSubscriptions () REST API places multiple subscription at once for the customer.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV1744": {
            "description": "Account does not exists with given details"
          },
          "eV1106": {
            "description": "Insufficient parameters. Please provide Services Info"
          },
          "eV1663": {
            "description": "Either ServiceId or ServiceName is required"
          },
          "eV1136": {
            "description": "Invalid Quantity, should be in numbers"
          },
          "eV1668": {
            "description": "Service Type should be PRODUCT/PACKAGE"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          },
          "eV1703": {
            "description": "Account is already in inactive state"
          },
          "eV1107": {
            "description": "Insufficient parameters. Please provide                          paymentmethodInfo"
          },
          "eV1108": {
            "description": "Label cannot be empty in Payment Method Info"
          },
          "eV1513": {
            "description": "Invalid label"
          },
          "eV1110": {
            "description": "Invalid Parameters in Payment Method Info"
          },
          "eV1680": {
            "description": "Invalid State in CardBilling"
          },
          "eV1681": {
            "description": "Invalid Country in CardBilling"
          },
          "eV1682": {
            "description": "Insufficient CardBilling Parameters"
          },
          "eV1854": {
            "description": "Exception occurred while inserting payment method"
          },
          "eV1747": {
            "description": "Third party API call failed"
          },
          "eV1684": {
            "description": "Payment method is mandatory"
          },
          "eV1679": {
            "description": "No Promotional Item exists with the given"
          },
          "eV1665": {
            "description": "No Service found with the given Service Id"
          },
          "eV1138": {
            "description": "No Service exists with the given name"
          },
          "eV1152": {
            "description": "already exist in Business Unit, please enter unique serial number"
          },
          "eV1153": {
            "description": "Communication failure occurred while validating the CPE"
          },
          "eV1385": {
            "description": "Payment Declined by Payment Gateway due to following             reason"
          },
          "eV1158": {
            "description": "Error While Processing Payment"
          },
          "eV1133": {
            "description": "The Status of the given payment method is Inactive.              Please activate it before using."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addSubscriptionsRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/addSubscriptions"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customerLoginV2": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "customerLoginRequestMessage",
        "description": "customerLoginV2() REST API is used to authenticate the user.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV2138": {
            "description": "Generic Failure"
          },
          "eV2134": {
            "description": "Wrong Username or Password"
          },
          "eV2408": {
            "description": "Your login has blocked. Please try after 15 Minutes"
          },
          "eV2510": {
            "description": "Insufficient Device parameters"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerLoginRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/customerLoginRequestMessage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateOrderQuote": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "updateOrderQuoteRequestMessage",
        "description": "updateOrderQuote () REST API is calculate the updated order quote amount.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV1665": {
            "description": "No Service found with the given Service Id"
          },
          "eV1668": {
            "description": "Service Type should be PRODUCT/PACKAGE"
          },
          "eV1362": {
            "description": "Service type can not be null"
          },
          "eV2491": {
            "description": "Customer can have only one Basic Service Product at a time"
          },
          "eV1216": {
            "description": "There is no basic product\\\\package with the given name in the product area"
          },
          "eV1217": {
            "description": "Please activate the basic service product\\\\package attached to the account"
          },
          "eV1267": {
            "description": "DmaId is mandatory"
          },
          "eV2524": {
            "description": "Auto payment method doesn't have billing address"
          },
          "eV2123": {
            "description": "Either SP Account ID or CP Customer ID or Session Token is required"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          },
          "eV1268": {
            "description": "NO Zone X Reference exists with the DMA ID"
          },
          "eV1214": {
            "description": "Account is already Inactive.Basic Service can't be changed"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updateOrderQuoteRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/updateOrderQuote"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/generateDeviceActivationCode": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "generateDeviceActivationCodeRequestMessage",
        "description": "generateDeviceActivationCode() REST API is used to generate activation code for the device and if device is already active, then it returns the session token.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV1001": {
            "description": "User Authentication Failed for UserName \"XXXX\" with ChannelPartnerName \"null\""
          },
          "eV2124": {
            "description": "Invalid Session Token"
          },
          "eV1082": {
            "description": "Serial number cannot be empty"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "generateDeviceActivationCodeRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/generateDeviceActivationCode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getVODEntitlements": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "getVODEntitlementsRequestMessage",
        "description": "getVODEntitlements () REST API is used to get the VOD entitlements  of an account in Evergent system.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV2138": {
            "description": "Generic Failure"
          },
          "eV2235": {
            "description": "Either SP Account ID or CP Customer ID or Contact ID or Session Token is required"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "getVODEntitlementsRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/getVODEntitlements"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getRemoteAuthToken": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "getRemoteAuthTokenRequestMessage",
        "description": "getRemoteAuthToken() REST API  is used to authenticate the user.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV1001": {
            "description": "Authentication failed"
          },
          "eV2482": {
            "description": "deviceId is mandatory"
          },
          "eV2483": {
            "description": "Account doesn't Exist with the given deviceId in \"BU name\" BU"
          },
          "eV2484": {
            "description": "Device not found with the given deviceId"
          },
          "eV2190": {
            "description": "Login limit reached"
          },
          "eV2138": {
            "description": "Generic Failure"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "getRemoteAuthTokenRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/getRemoteAuthToken"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authForVODPlayBack": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "authForVODPlayBackRequestMessage",
        "description": "authForVODPlayBack () REST API is used to verify whether a customer can avail the content.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "ev2308": {
            "description": "Email"
          },
          "eV2145": {
            "description": "Missing Parameter(s)"
          },
          "eV2138": {
            "description": "Generic Failure"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          },
          "eV2159": {
            "description": "Outside of registered country"
          },
          "eV2375": {
            "description": "Services not yet available."
          },
          "eV2236": {
            "description": "Your current subscription has expired."
          },
          "eV2144": {
            "description": "Payment was declined"
          },
          "eV2129": {
            "description": "Account not subscribed with product/package"
          },
          "eV2123": {
            "description": "Either SP Account ID or CP Customer ID or Session Token is required."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "authForVODPlayBackRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/authForVODPlayBack"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getProrateWithTax": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "getProrateWithTaxRequestMessage",
        "description": "getProrateWithTax() REST API is used to calculate the prorate amount with tax  in Evergent system..",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV1267": {
            "description": "DmaId is mandatory"
          },
          "eV1106": {
            "description": "Insufficient parameters. Please provide Services Info"
          },
          "eV2518": {
            "description": "Address is mandatory"
          },
          "eV2519": {
            "description": "Location not found with the given address"
          },
          "eV2521": {
            "description": "Vertex call Fail"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "getProrateWithTaxRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/getProrateWithTax"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/applyCoupon": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "applyCouponRequestMessage",
        "description": "applyCoupon () REST API is used to apply the coupon on the package/product to which it is applied.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV1001": {
            "description": "Authentication failed"
          },
          "eV1842": {
            "description": "Please enter a valid coupon code"
          },
          "eV1863": {
            "description": "This coupon has been disabled"
          },
          "eV1862": {
            "description": "This coupon has expired"
          },
          "eV1882": {
            "description": "Maximum redemptions reached"
          },
          "eV1861": {
            "description": "This coupon has already been redeemed."
          },
          "eV1844": {
            "description": "Invalid Price."
          },
          "eV1841": {
            "description": "Either Product Id or Package Id is required"
          },
          "eV1655": {
            "description": "No package found with this Package id"
          },
          "eV1864": {
            "description": "This coupon is not valid for this content."
          },
          "eV1645": {
            "description": "No product found with this product id"
          },
          "eV1661": {
            "description": "Invalid Product Id."
          },
          "eV2124": {
            "description": "Invalid session token."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "applyCouponRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/applyCoupon"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getCustomerEntitlements": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "getCustomerEntitlementsRequestMessage",
        "description": "getCustomerEntitlements () REST API is used to get the VOD entitlements  of an account in Evergent system..",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV2138": {
            "description": "Generic Failure"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "getCustomerEntitlementsRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/getCustomerEntitlements"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/changeBasicService": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "changeBasicServiceRequestMessage",
        "description": "changeBasicService () REST API is used to change the basic service for a  customer Account.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV1637": {
            "description": "Either SP Account ID or CP Customer ID is required"
          },
          "eV1003": {
            "description": "Invalid SP Account ID  “XXXX” for XXXX"
          },
          "eV1342": {
            "description": "Invalid customer ID “XXXX” for XXXX"
          },
          "eV1216": {
            "description": "There is no basic product/package with the given name in the product area"
          },
          "eV1219": {
            "description": "Pricing not defined for the product  \"XXXX\" with quantity 1 as on Current Date"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "changeBasicServiceRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/changeBasicService"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getPackages": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "getPackagesRequestMessage",
        "description": "getPackages() REST API is used to return the list of all packages which are available to the specific DMA..",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV1267": {
            "description": "DmaId is mandatory"
          },
          "eV1391": {
            "description": "Invalid pricing date"
          },
          "eV2086": {
            "description": "Invalid returnPromotions"
          },
          "eV1390": {
            "description": "No packages defined for the given DMA"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "getPackagesRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/getPackages"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getCustomerRedeemedCoupons": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "getCustomerRedeemedCouponsRequestMessage",
        "description": "getCustomerRedeemedCoupons() REST API is used to get the redeemed coupons for a customer account.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "getCustomerRedeemedCouponsRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/getCustomerRedeemedCoupons"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activateService": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "activateServiceRequestMessage",
        "description": "activateService() REST API is used to activate the existing Mobility plan if needed for activation.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "activateServiceRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/activateService"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/validateCustomerCouponCode": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "validateCustomerCouponCodeRequestMessage",
        "description": "validateCustomerCouponCode() REST API is to validate and provide the meta-data of the coupon for the customer.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "validateCustomerCouponCodeRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/validateCustomerCouponCode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/validateServiceEligibility": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "validateServiceEligibilityRequestMessage",
        "description": "validateServiceEligibility () REST API is used to validate CTN(Cellular Telephone Number) eligibility and storing the details.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "validateServiceEligibilityRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/validateServiceEligibility"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getServiceEligibilityDetails": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "getServiceEligibilityDetailsRequestMessage",
        "description": "getServiceEligibilityDetails() REST API is used to get the latest accessToken and refreshURL on the requestId(and sessionToken) parameter.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "getServiceEligibilityDetailsRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/getServiceEligibilityDetails"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/removeSubsciptions": {
      "post": {
        "tags": [
          "aeg"
        ],
        "operationId": "removeSubsciptionsRequestMessage",
        "description": "removeSubscriptions () REST API removes multiple                     subscriptions at once from the customer Account.",
        "responses": {
          "111111111": {
            "description": "Authentication Failed"
          },
          "eV2124": {
            "description": "Invalid Session Token"
          },
          "eV1342": {
            "description": "Invalid customer ID XXXX for ATT"
          },
          "eV2123": {
            "description": "Either SP Account ID or CP Customer ID or Session                Token is required"
          },
          "eV1689": {
            "description": "No active subscription product with this ServiceId               /ServiceName in this account"
          },
          "eV1663": {
            "description": "Either ServiceId or ServiceName is required"
          },
          "eV1135": {
            "description": "Invalid Quantity, Quantity of the Service should be              greater than or equal to one"
          },
          "eV1439": {
            "description": "Quantity should be less than product quantity"
          },
          "eV1026": {
            "description": "Invalid Reason Code"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "removeSubsciptionsRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/removeSubsciptions"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetProductsRequestMessage": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "dmaID"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "dmaID": {
            "type": "string",
            "description": "Unique ID of the channel partner."
          },
          "salesChannel": {
            "type": "string",
            "description": "Name of the sales channel"
          }
        }
      },
      "activateService": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken",
          "serviceType",
          "serviceId"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "serviceId": {
            "type": "string",
            "description": "SKU/ Quick code of the product in Evergent System"
          },
          "serviceType": {
            "type": "string",
            "description": "PRODUCT/PACKAGE"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account with  TTL value"
          }
        }
      },
      "createUser": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "customerPassword",
          "email"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "externalId": {
            "type": "string",
            "description": "Derived attribute from BAN and SubscriberId in evergent system"
          },
          "customerPassword": {
            "type": "string",
            "description": "Customer password"
          },
          "email": {
            "type": "string",
            "description": "User Email"
          },
          "verifyEmail": {
            "type": "boolean",
            "description": "True/false"
          },
          "agentDealerInfo": {
            "type": "object",
            "$ref": "#/components/schemas/agentDealerInfo"
          }
        }
      },
      "getServiceEligibilityDetails": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken",
          "requestId"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "requestId": {
            "type": "string",
            "description": "Tracker Id"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account with  TTL value"
          }
        }
      },
      "getPackages": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "dmaID"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "dmaID": {
            "type": "string",
            "description": "Unique ID of the channel partner."
          }
        }
      },
      "getRemoteAuthToken": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "contactUserName",
          "contactPassword",
          "deviceId"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "contactUserName": {
            "type": "string",
            "description": "Contact username"
          },
          "contactPassword": {
            "type": "string",
            "description": "Contact password"
          },
          "deviceId": {
            "type": "string",
            "description": "Unique deviceId of the device"
          }
        }
      },
      "changeBasicService": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "newServiceName",
          "cpCustomerID",
          "effectiveDate"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "cpCustomerID": {
            "type": "string",
            "description": "Unique identifier of the account in Partner systems. This can be used for reconciliation purposes."
          },
          "newServiceName": {
            "type": "string",
            "description": "Name of the new basic service in Evergent System"
          },
          "effectiveDate": {
            "type": "string",
            "description": "Effective date for the new basic service"
          }
        }
      },
      "updateOrderQuote": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "deviceDetails"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "dmaID": {
            "type": "string",
            "description": "Unique ID of the channel partner."
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account."
          }
        }
      },
      "selectedServices": {
        "type": "array",
        "xml": {
          "name": "selectedServices",
          "wrapped": true
        },
        "items": {
          "type": "object",
          "$ref": "#/components/schemas/selectedServicess"
        }
      },
      "address": {
        "type": "object",
        "xml": {
          "name": "address",
          "wrapped": true
        },
        "items": {
          "type": "object",
          "$ref": "#/components/schemas/address"
        }
      },
      "selectedServicess": {
        "type": "object",
        "required": [
          "serviceId",
          "serviceType"
        ],
        "properties": {
          "serviceId": {
            "type": "string",
            "description": "serviceId of the Service"
          },
          "serviceType": {
            "type": "integer",
            "description": "servicetype of the Service"
          }
        }
      },
      "generateDeviceActivationCode": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "deviceDetails"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "deviceDetails": {
            "type": "object",
            "$ref": "#/components/schemas/deviceDetails"
          }
        }
      },
      "deviceDetails": {
        "type": "object",
        "required": [
          "serialNo",
          "deviceType",
          "modelNo",
          "deviceName"
        ],
        "properties": {
          "serialNo": {
            "type": "string",
            "description": "Serial number of the device."
          },
          "deviceType": {
            "type": "string",
            "description": "Type of the device."
          },
          "deviceName": {
            "type": "string",
            "description": "Name of the device"
          },
          "modelNo": {
            "type": "string",
            "description": "Model number of the device."
          }
        }
      },
      "authForSubPlayBack": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "ipAddress",
          "skuORQuickCode",
          "sessionToken"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account."
          },
          "skuORQuickCode": {
            "type": "string",
            "description": "Id of the product"
          },
          "ipAddress": {
            "type": "string",
            "description": "Name of the sales channel"
          }
        }
      },
      "getCustomerRedeemedCoupons": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account."
          }
        }
      },
      "applyCoupon": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "couponCode",
          "productID",
          "sessionToken",
          "price"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account."
          },
          "productID": {
            "type": "string",
            "description": "Id of the product."
          },
          "couponCode": {
            "type": "string",
            "description": "Coupon code which is to be redeemed on the product."
          },
          "price": {
            "type": "integer",
            "description": "Price of the product."
          }
        }
      },
      "validateCustomerCouponCode": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "couponCode",
          "sessionToken"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account."
          },
          "couponCode": {
            "type": "string",
            "description": "Coupon code which is to be redeemed on the product."
          }
        }
      },
      "authForVODPlayBack": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken",
          "skuORQuickCode"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account."
          },
          "skuORQuickCode": {
            "type": "string",
            "description": "Id of the product"
          },
          "ipAddress": {
            "type": "string",
            "description": "ipAddess info of the customer"
          }
        }
      },
      "getCustomerEntitlements": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account."
          }
        }
      },
      "addTVODOrder": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken",
          "rentalPeriod",
          "price",
          "paymentmethodInfo",
          "CardInfoMessage"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account."
          },
          "title": {
            "type": "string",
            "description": "Title of the VOD"
          },
          "id": {
            "type": "string",
            "description": "Unique asset ID of the VOD Product"
          },
          "rentalPeriod": {
            "type": "string",
            "description": "Expiry duration of the purchased VOD in Hours."
          },
          "price": {
            "type": "string",
            "description": "Price of the product"
          },
          "paymentmethodInfo": {
            "type": "object",
            "$ref": "#/components/schemas/paymentmethodInfo"
          },
          "CardInfoMessage": {
            "type": "object",
            "$ref": "#/components/schemas/CardInfoMessage"
          }
        }
      },
      "removeDevice": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken",
          "deviceDetails"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account.."
          },
          "deviceDetails": {
            "type": "object",
            "$ref": "#/components/schemas/deviceDetailss"
          }
        }
      },
      "deviceDetailss": {
        "type": "object",
        "required": [
          "serialNo"
        ],
        "properties": {
          "serialNo": {
            "type": "string",
            "description": "Serial number of the device."
          }
        }
      },
      "getAccountDevices": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account."
          }
        }
      },
      "registerDevice": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken",
          "activationCode"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account."
          },
          "activationCode": {
            "type": "string",
            "description": "Activation code of the registerDevice."
          }
        }
      },
      "updateParentalControlDetails": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken",
          "parentalControl",
          "parentalControlLevel",
          "oldParentalControlPin",
          "newParentalControlPin"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account."
          },
          "parentalControl": {
            "type": "string",
            "description": "Active or deactivate the parental control"
          },
          "parentalControlLevel": {
            "type": "string",
            "description": "Level of the parental control"
          },
          "oldParentalControlPin": {
            "type": "string",
            "description": "Old Secure pin of parental control"
          },
          "newParentalControlPin": {
            "type": "string",
            "description": "New Secure pin of parental control"
          }
        }
      },
      "createParentalControlDetails": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken",
          "parentalControlPin",
          "parentalControl",
          "parentalControlLevel"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account."
          },
          "parentalControlPin": {
            "type": "string",
            "description": "Secure pin of parental control"
          },
          "parentalControl": {
            "type": "string",
            "description": "Active or deactivate the parental control"
          },
          "parentalControlLevel": {
            "type": "string",
            "description": "Level of the parental control."
          }
        }
      },
      "verifyAccount": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "cpid",
          "email",
          "userToken",
          "verificationParam"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "cpid": {
            "type": "string",
            "description": "Unique ID of the channel partner."
          },
          "email": {
            "type": "string",
            "description": "Unique email of the account."
          },
          "userToken": {
            "type": "string",
            "description": "Unique token which is valid only once"
          },
          "verificationParam": {
            "type": "object",
            "$ref": "#/components/schemas/verificationParam"
          }
        }
      },
      "verificationParam": {
        "type": "object",
        "required": [
          "paramName",
          "paramValue"
        ],
        "properties": {
          "paramName": {
            "type": "string",
            "description": "Account verification parameter"
          },
          "paramValue": {
            "type": "string",
            "description": "Value of the account verification parameter"
          }
        }
      },
      "updateServiceEligibilityDetails": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "status",
          "requestId"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "requestId": {
            "type": "string",
            "description": "Tracking ID"
          },
          "ban": {
            "type": "string",
            "description": "sBilling account number of the customer"
          },
          "subscriberId": {
            "type": "string",
            "description": "Unique identifier for the CTN"
          },
          "refreshURL": {
            "type": "string",
            "description": "OAuth details"
          },
          "accessToken": {
            "type": "string",
            "description": "OAuth Access Token"
          },
          "status": {
            "type": "string",
            "description": "CTN consent status or eligibility status"
          },
          "statusDescrip": {
            "type": "string",
            "description": "CTV consent or eligibility related description"
          }
        }
      },
      "resetPassword": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "contactPassword",
          "email",
          "userToken"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "userToken": {
            "type": "string",
            "description": "Unique user token generated for the account on successful authentication at portal."
          },
          "email": {
            "type": "string",
            "description": "User’s registered email-id"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique token generated for the customer on successful            authentication"
          },
          "contactPassword": {
            "type": "string",
            "description": "Existing Customer password"
          }
        }
      },
      "applyCouponV2": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken",
          "couponCode"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique token generated for the customer on successful            authentication"
          },
          "couponCode": {
            "type": "string",
            "description": "Coupon code, which is to be redeemed on the product"
          }
        }
      },
      "getVODEntitlements": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique token generated for the customer on successful            authentication"
          }
        }
      },
      "validateParentalControlPIN": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken",
          "parentalControlPin"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique token generated for the customer on successful authentication"
          },
          "parentalControlPin": {
            "type": "string",
            "description": "Secure pin of parental control"
          }
        }
      },
      "questions": {
        "type": "object",
        "required": [
          "code",
          "answer"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Specific code related to security question"
          },
          "answer": {
            "type": "string",
            "description": "Answer related to the question"
          }
        }
      },
      "logOutUser": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique token generated for the customer on successful            authentication"
          }
        }
      },
      "forgotContactPassword": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "email"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "email": {
            "type": "string",
            "description": "User Email"
          }
        }
      },
      "changePassword": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken",
          "oldPassword",
          "newPassword",
          "confirmNewpassword"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessiontoken": {
            "type": "string",
            "description": "Unique token generated for the customer on successful authentication."
          },
          "oldPassword": {
            "type": "string",
            "description": "Existing Customer password"
          },
          "newPassword": {
            "type": "string",
            "description": "new Customer password"
          },
          "confirmNewpassword": {
            "type": "string",
            "description": "new Customer password"
          }
        }
      },
      "getPayments": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project."
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project."
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project."
          },
          "sessiontoken": {
            "type": "string",
            "description": "Unique identifier of the account."
          }
        }
      },
      "removeSubscription": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken",
          "serviceType",
          "serviceID"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "serviceType": {
            "type": "string",
            "description": "Product/Package"
          },
          "serviceID": {
            "type": "string",
            "description": "SKU/ Quick code of the product in Ev System"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account."
          },
          "reasonCode": {
            "type": "string",
            "description": "Reason code for subscription removal"
          }
        }
      },
      "removeSubsciptions": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken",
          "quantity",
          "serviceID"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account."
          },
          "services": {
            "type": "array",
            "xml": {
              "name": "services",
              "wrapped": true
            },
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/services"
            }
          }
        }
      },
      "services": {
        "type": "object",
        "required": [
          "serviceId",
          "quantity"
        ],
        "properties": {
          "serviceId": {
            "type": "string",
            "description": "serviceId of the Service"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of the Service"
          }
        }
      },
      "updatePaymentInfo": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken",
          "label",
          "cpCustomerID",
          "spAccountID",
          "CardInfoMessage",
          "PayPalAccountMessage"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project."
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project."
          },
          "cpCustomerID": {
            "type": "string",
            "description": "Unique identifier of the account in Partner systems. This can be used for reconciliation purposes"
          },
          "sessiontoken": {
            "type": "string",
            "description": "Unique token generated for the customer on successful             authentication."
          },
          "label": {
            "type": "string",
            "description": "Label of the payment method."
          },
          "status": {
            "type": "string",
            "description": "status of the Payment method."
          },
          "isAutoPayment": {
            "type": "string",
            "description": "true, if auto Payment Method. Else, false."
          },
          "CardInfoMessage": {
            "type": "object",
            "$ref": "#/components/schemas/CardInfoMessage"
          }
        }
      },
      "CardInfoMessage": {
        "type": "object",
        "required": [
          "billingAddress"
        ],
        "properties": {
          "billingAddress": {
            "type": "object",
            "$ref": "#/components/schemas/billingAddress"
          },
          "cardNumber": {
            "type": "string",
            "description": "Unique number of the credit/debit card"
          },
          "cardType": {
            "type": "string",
            "description": "Card type of the account holder"
          },
          "expiryDate": {
            "type": "string",
            "description": "expiryDate of the card in MM/YYYY format"
          },
          "methodType": {
            "type": "string",
            "description": "Payment method typer"
          },
          "securityCode": {
            "type": "string",
            "description": "Security code as on the Card"
          },
          "nameOnCard": {
            "type": "string",
            "description": "Name on the card"
          }
        }
      },
      "billingAddress": {
        "type": "object",
        "required": [
          "address1",
          "city",
          "state",
          "country",
          "zipCode"
        ],
        "properties": {
          "address1": {
            "type": "string",
            "description": "Address of the customer"
          },
          "city": {
            "type": "string",
            "description": "City of the customer"
          },
          "state": {
            "type": "string",
            "description": "State of the customer"
          },
          "country": {
            "type": "string",
            "description": "Country of the user"
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode of the Address"
          }
        }
      },
      "updateContact": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken",
          "customerUsername",
          "customerPassword"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project."
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project."
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project."
          },
          "firstName": {
            "type": "string",
            "description": "User First Name."
          },
          "lastName": {
            "type": "string",
            "description": "User Last Name."
          },
          "sessiontoken": {
            "type": "string",
            "description": "Unique identifier of the account.."
          },
          "customerUsername": {
            "type": "string",
            "description": "Customer username."
          },
          "customerPassword": {
            "type": "string",
            "description": "Customer password"
          },
          "email": {
            "type": "string",
            "description": "User Email"
          },
          "alertNotificationEmail": {
            "type": "string",
            "description": "Email Opt-in."
          },
          "customerOldPassword": {
            "type": "string",
            "description": "Customer’s Old password (Mandatory in the case if we              provide customer password"
          }
        }
      },
      "getActiveSubscriptions": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessiontoken": {
            "type": "string",
            "description": "Unique identifier of the account."
          }
        }
      },
      "getPaymentMethods": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessiontoken": {
            "type": "string",
            "description": "Unique token generated for the customer on successful            authentication."
          }
        }
      },
      "getContact": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessiontoken": {
            "type": "string",
            "description": "Unique identifier of the account."
          }
        }
      },
      "isCustomerEligibleForFreeTrial": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessiontoken": {
            "type": "string",
            "description": "A unique token generated for the customer on                     successful authentication."
          },
          "spAccountID": {
            "type": "string",
            "description": "A unique identifier of the account."
          },
          "cpCustomerID": {
            "type": "string",
            "description": "A unique identifier of the account in Partner systems. This can be used for reconciliation purposes"
          }
        }
      },
      "getProrateWithTax": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "dmaID",
          "itemsInfo"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Discrete Area Id of the Prject"
          },
          "dmaID": {
            "type": "string",
            "description": "salesChannel of the customer"
          },
          "itemsInfo": {
            "type": "array",
            "xml": {
              "name": "itemsInfo",
              "wrapped": true
            },
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/itemsInfo"
            }
          },
          "address": {
            "type": "object",
            "xml": {
              "name": "address",
              "wrapped": true
            },
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/addresss"
            }
          }
        }
      },
      "itemsInfo": {
        "type": "object",
        "required": [
          "serviceId",
          "serviceType",
          "quantity"
        ],
        "properties": {
          "serviceId": {
            "type": "string",
            "description": "serviceId of the Service"
          },
          "serviceType": {
            "type": "string",
            "description": "serviceType of the Service"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of the Service"
          }
        }
      },
      "addresss": {
        "type": "object",
        "required": [
          "city",
          "state",
          "country",
          "zipCode",
          "address1",
          "address2"
        ],
        "properties": {
          "address1": {
            "type": "string",
            "description": "Address 1 of the customer"
          },
          "city": {
            "type": "string",
            "description": "City of the Customer"
          },
          "state": {
            "type": "string",
            "description": "State of the Customer"
          },
          "country": {
            "type": "string",
            "description": "Country of the Customer"
          },
          "zipCode": {
            "type": "string",
            "description": "Zip Code of the Customer"
          },
          "address2": {
            "type": "string",
            "description": "Address 2 of the customer"
          }
        }
      },
      "validateServiceEligibility": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "phoneNumber",
          "serviceProdiverSKU",
          "requestId"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Unique identifier of the account with  TTL value"
          },
          "requestId": {
            "type": "string",
            "description": "Tracking ID"
          },
          "phoneNumber": {
            "type": "boolean",
            "description": "Cellular Telephone Number(CTN)"
          },
          "serviceProdiverSKU": {
            "type": "boolean",
            "description": "Service Provider’s SKU"
          },
          "ban": {
            "type": "string",
            "description": "Billing account number of the customer"
          },
          "agentDealerInfo": {
            "type": "object",
            "$ref": "#/components/schemas/agentDealerInfo"
          }
        }
      },
      "addSubscriptions": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "sessionToken",
          "services"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password for the project"
          },
          "sessionToken": {
            "type": "string",
            "description": "Discrete Area Id of the Prject"
          },
          "paymentmethodInfo": {
            "type": "obeject",
            "$ref": "#/components/schemas/paymentmethodInfo"
          },
          "services": {
            "type": "array",
            "$ref": "#/components/schemas/addSubscriptionServices"
          },
          "originAddressURL": {
            "type": "string",
            "description": "URL from where address originates"
          },
          "collectedFromStore": {
            "type": "boolean",
            "description": "Indicate whether service to be collected from store or            not."
          },
          "sameAsBillingAddress": {
            "type": "boolean",
            "description": "Indicates whether the shipping address is same as                billing address or not"
          },
          "shippingAddress": {
            "type": "object",
            "$ref": "#/components/schemas/shippingAddress"
          },
          "agentDealerInfo": {
            "type": "object",
            "$ref": "#/components/schemas/agentDealerInfo"
          }
        }
      },
      "agentDealerInfo": {
        "type": "object",
        "required": [
          "agentId",
          "dealerId1",
          "dealerId2"
        ],
        "properties": {
          "agentId": {
            "type": "string",
            "description": "Unique id of the Agent"
          },
          "dealerId1": {
            "type": "string",
            "description": "Unique id of the dealer"
          },
          "dealerId2": {
            "type": "string",
            "description": "Unique id of the dealer"
          }
        }
      },
      "shippingAddress": {
        "type": "object",
        "required": [
          "address1",
          "address2",
          "city",
          "state",
          "country",
          "zipCode"
        ],
        "properties": {
          "address1": {
            "type": "string",
            "description": "Address of the customer"
          },
          "address2": {
            "type": "string",
            "description": "Address of the customer"
          },
          "city": {
            "type": "string",
            "description": "City of the customer"
          },
          "state": {
            "type": "string",
            "description": "State of the customer"
          },
          "country": {
            "type": "string",
            "description": "Country of the user"
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode of the Address"
          }
        }
      },
      "paymentmethodInfo": {
        "type": "object",
        "required": [
          "label",
          "makeAutoPayment",
          "cardInfoMsg"
        ],
        "properties": {
          "label": {
            "type": "string",
            "description": "Label of the payment method"
          },
          "makeAutoPayment": {
            "type": "boolean",
            "description": "To make card as auto payment method."
          },
          "cardInfoMsg": {
            "type": "object",
            "$ref": "#/components/schemas/CardInfoMessage"
          }
        }
      },
      "addSubscriptionServices": {
        "type": "object",
        "required": [
          "serviceType",
          "quantity",
          "serviceId"
        ],
        "properties": {
          "serviceId": {
            "type": "string",
            "description": "serviceId of the Service"
          },
          "serviceType": {
            "type": "string",
            "description": "serviceType of the Service"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of the Service"
          }
        }
      },
      "customerLoginRequestMessage": {
        "type": "object",
        "required": [
          "apiUser",
          "channelPartnerID",
          "apiPassword",
          "deviceId",
          "contactUserName",
          "customerPassword"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "channel partner Id of the project"
          },
          "apiUser": {
            "type": "string",
            "description": "API User Name for the project"
          },
          "apiPassword": {
            "type": "string",
            "format": "password",
            "description": "API Password for the project"
          },
          "contactUserName": {
            "type": "string",
            "description": "Customer User name"
          },
          "contactPassword": {
            "type": "string",
            "description": "Customer password"
          },
          "deviceId": {
            "type": "string",
            "description": "deviceId Number of the device"
          },
          "deviceType": {
            "type": "string",
            "description": "deviceId Number of the device"
          },
          "deviceName": {
            "type": "string",
            "description": "deviceId Number of the device"
          },
          "agentDealerInfo": {
            "type": "object",
            "$ref": "#/components/schemas/agentDealerInfo1"
          }
        }
      },
      "agentDealerInfo1": {
        "type": "object",
        "required": [
          "agentId",
          "dealerId1",
          "dealerId2"
        ],
        "properties": {
          "agentId": {
            "type": "string",
            "description": "Unique id of the Agent"
          },
          "dealerId1": {
            "type": "string",
            "description": "Unique id of the dealer"
          },
          "dealerId2": {
            "type": "string",
            "description": "Unique id of the dealer"
          }
        }
      }
    }
  }
}