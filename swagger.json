{
  "swagger": "2.0",
  "info": {
    "description": "Evergent API File for QA",
    "version": "1.0.0",
    "title": "Zupliter API's List"
  },
  "host": "rest-uat-att.evergent.com",
  "basePath": "/dfwonz",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "Zupliter_API_list",
      "description": "An individual API Filing record, accessed by its ID/sessionToken/TravellingSession Token"
    }
  ],
  "paths": {
    "/getProducts": {
      "post": {
        "tags": [
          "Zupliter_API_list"
        ],
        "summary": "API List for the Project",
        "description": "",
        "operationId": "GetProductsRequestMessage",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetProductsRequestMessage"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/validateAndCreateAccount": {
      "post": {
        "tags": [
          "Zupliter_API_list"
        ],
        "summary": "API List for the Project",
        "description": "",
        "operationId": "ValidateAndCreateAccountRequestMessage",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateAndCreateAccountRequestMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "definitions": {
    "GetProductsRequestMessage": {
      "type": "object",
      "properties": {
        "GetProductsRequestMessage": {
          "$ref": "#/definitions/GetProductsRequest"
        }
      }
    },
    "ValidateAndCreateAccountRequestMessage": {
      "type": "object",
      "properties": {
        "ValidateAndCreateAccountRequestMessage": {
          "$ref": "#/definitions/ValidateAndCreateAccountRequest"
        }
      }
    },
    "ValidateAndCreateAccountRequest": {
      "type": "object",
      "required": [
        "firstName"
      ],
      "properties": {
        "channelPartnerID": {
          "type": "string",
          "description": "channel partner Id of the project",
          "example": "ZULU1"
        },
        "apiUser": {
          "type": "string",
          "example": "zuluapiuser",
          "description": "API User Name for the project"
        },
        "apiPassword": {
          "type": "string",
          "example": "zulu@p!123",
          "description": "API Password for the project"
        },
        "firstName": {
          "type": "string",
          "example": "Vivek",
          "description": "User First Name"
        },
        "lastName": {
          "type": "string",
          "example": "Vivek",
          "description": "User Last Name"
        },
        "email": {
          "type": "string",
          "example": "Vivek@yopmail.com",
          "description": "User Last Name"
        },
        "agentDealerInfo": {
          "$ref": "#/definitions/agentDealerInfo"
        }
      }
    },
    "agentDealerInfo": {
      "type": "object",
      "properties": {
        "agentId": {
          "type": "string",
          "example": "001",
          "description": "Unique id of the Agent"
        },
        "dealerId1": {
          "type": "string",
          "example": "001",
          "description": "Unique id of the dealer"
        },
        "dealerId2": {
          "type": "string",
          "example": "001",
          "description": "Unique id of the dealer"
        }
      }
    },
    "GetProductsRequest": {
      "type": "object",
      "required": [
        "dmaID"
      ],
      "properties": {
        "channelPartnerID": {
          "type": "string",
          "description": "channel partner Id of the project",
          "example": "ZULU1"
        },
        "apiUser": {
          "type": "string",
          "example": "zuluapiuser",
          "description": "API User Name for the project"
        },
        "apiPassword": {
          "type": "string",
          "example": "zulu@p!123",
          "description": "API Password for the project"
        },
        "dmaID": {
          "type": "string",
          "example": "001",
          "description": "Discrete Area Id of the Prject"
        },
        "salesChannel": {
          "type": "string",
          "example": "Residential",
          "description": "salesChannel of the customer"
        },
        "offerType": {
          "type": "string",
          "example": "Residential",
          "description": "offerType of the customer"
        },
        "offerTypes": {
          "type": "array",
          "xml": {
            "name": "offerTypes",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "example": "1/0"
        },
        "message": {
          "type": "string",
          "example": "Success / failure",
          "description": "salesChannel of the customer"
        },
        "productsResponseMessage": {
          "type": "object",
          "properties": {
            "dmaName": {
              "type": "string"
            },
            "frequency": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}